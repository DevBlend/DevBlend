#!/usr/bin/python

# For argument parsing and --help
import argparse
# For some os-related path manipulations
import os
# For file manipulation (copy/move/...)
import shutil
#
# import sys
# To execute shell commands
from subprocess import call
# gitpython to manage Git repos.
# It's a wrapper for git system calls
from git import Repo
# pyyaml
import yaml

# Zenias function
from zenias_functions import (z_available_lang,
                              z_check_dir,
                              z_check_language_config,
                              z_info,
                              z_logo,
                              z_success)
# Zenias config
global Z_REPOS

# Logo
z_logo()

# Load the official repos
with open('repos.yml', 'r') as f:
    Z_REPOS = yaml.load(f)
f.close()

#
# Parser for arguments
#
parser = argparse.ArgumentParser(prog='zenias')
# Main commands
subparsers = parser.add_subparsers()
#
# create the parser for the "create" command
parser_a = subparsers.add_parser('create',
                                 help='Creates a box. Use '
                                      '"zenias create -h" for help.')
# Language argument
parser_a.add_argument('language',
                      type=str,
                      help='The language/module you want to build the box for. '
                           'Use \'zenias -ll\' for the complete list.')
# Directory argument
parser_a.add_argument('-d', '--directory',
                      type=str,
                      default='.',
                      help='Directory where to create the box. '
                           'Default is the current dir.')
# Options argument
parser_a.add_argument('-o', '--options',
                      help='List of options. Please refer to the '
                           'specific options available for each boxes.')
#
# create the parser for the "list" command
parser_b = subparsers.add_parser('list',
                                 help='Display the list of all '
                                      'languages/modules. Use "zenias list -h" '
                                      'for help.')
# Language options
parser_b.add_argument('-l',
                      type=str,
                      help='Restrict the list to this language and submodules')
args = parser.parse_args()

# ------------------------
# List available languages (zenias list -l <lang>)
if 'l' in args:
    z_available_lang(args.language, Z_REPOS)
    exit(0)

# ------------------------
# Box creation

#
# Starting checks
#
print z_info('Attempting to create a box for ' +
             args.language + ' in "' + args.directory + '"...')
# Language presence and repo
repo = z_check_language_config(args.language, Z_REPOS)

if repo is None:
    exit(1)

print z_info('...Language/module available at ' + repo)


# Target dir, full path
target = os.path.abspath(args.directory)
# Source dir (zenias dir), full path
script = os.path.dirname(os.path.realpath(__file__))

#
# Checking target
#
z_check_dir(target)

# Getting repo
print z_info('...Cloning...')
Repo.clone_from(repo, target)
print z_success('...Done.')

# Removing the .git folder
print z_info('...Cleaning downloaded repo...')
shutil.rmtree(os.path.join(target, '.git'))
print z_success('...Done.')

# Copy zenias_bin for usage in guest
print z_info('...Copying some files...')
shutil.copyfile('./scripts/zenias_guest.sh',
                os.path.join(target, 'zenias_bin/', 'zenias')
                )

# Launch vagrant
print z_info('...Launching vagrant...')
os.chdir(target)
#call(['vagrant', 'up'])

z_success('Done. Enjoy your box !')
